// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+r",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "shift+cmd+r",
        "command": "python.execInTerminal"
    },
    {
        "key": "alt+down",
        "command": "editor.action.moveLinesDownAction"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.action.moveLinesDownAction"
    },
    {
        "key": "alt+up",
        "command": "editor.action.moveLinesUpAction"
    },
    {
        "key": "alt+cmd+[",
        "command": "-editor.action.moveLinesUpAction"
    },
    {
        "key": "shift+cmd+r",
        "command": "python.refreshTensorBoard",
        "when": "python.hasActiveTensorBoardSession && python.hasActiveTensorBoardSession"
    },
    {
        "key": "cmd+r",
        "command": "-python.refreshTensorBoard",
        "when": "python.hasActiveTensorBoardSession && python.hasActiveTensorBoardSession"
    },
    {
        "key": "shift+cmd+r",
        "command": "jupyter.refreshDataViewer",
        "when": "isWorkspaceTrusted && jupyter.dataViewerActive && jupyter.dataViewerActive"
    },
    {
        "key": "cmd+r",
        "command": "-jupyter.refreshDataViewer",
        "when": "isWorkspaceTrusted && jupyter.dataViewerActive && jupyter.dataViewerActive"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "shift+cmd+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+cmd+e",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k f",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+right",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+left",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+left",
        "command": "editor.fold"
    },
    {
        "key": "alt+cmd+left",
        "command": "-editor.fold"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+left",
        "command": "dakara-foldplus.levelAtCursor"
    },
    {
        "key": "ctrl+shift+right",
        "command": "dakara-foldplus.levelAtCursor.unfold"
    },
    {
        "key": "alt+cmd+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "alt+cmd+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "alt+cmd+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "-workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k g",
        "command": "git-graph.view"
    },
    {
        "key": "cmd+k i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+k i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+k i",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+k i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+k right",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "cmd+0",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+b",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusSideBar",
        "when": "!terminalFocus|!sideBarFocus"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusPanel",
        "when": "sideBarFocus"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "panelFocus"
    },
    {
        "key": "cmd+shift+f",
        "command": "editor.actions.findWithArgs"
    },
    {
        "key": "cmd+f",
        "command": "workbench.view.search",
        "when": "!terminalFocus|!sideBarFocus"
    },
    {
        "key": "cmd+shift+f",
        "command": "term",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+i",
        "command": "workbench.action.navigateEditorGroups",
        "when": "!terminalFocus|!sideBarFocus"
    },
    {
        "key": "cmd+k o",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+k e",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "cmd+k s",
        "command": "workbench.scm.focus"
    },
    // vim specific shortcuts
    {
        "command": "editor.toggleFold",
        "key": "Space",
        "when": "editorTextFocus && neovim.mode == normal"
    },
    {
        "command": "editor.action.rename",
        "key": "cmd+k r",
        "when": "editorTextFocus && neovim.mode == normal"
    },
    {
        "command": "vscode-neovim.send",
        "key": "N",
        "when": "editorTextFocus && neovim.mode == normal",
        "args": "Nzz"
    },
    {
        "command": "vscode-neovim.send",
        "key": "n",
        "when": "editorTextFocus && neovim.mode == normal",
        "args": "nzz"
    },
    {
        "command": "vscode-neovim.send",
        "key": "cmd+1",
        "args": ":! "
    }
]
